{"version":3,"sources":["components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Layout/Layout.js","components/App.js","index.js"],"names":["ContactItem","styled","li","ContactButton","button","ContactListItem","name","number","onDelete","type","onClick","List","ul","ContactList","contacts","onDeleteContact","map","id","key","PhonebookForm","form","PhoneInput","input","PhoneButton","ContactForm","state","handleSubmit","e","preventDefault","props","onAddContact","setState","handleInputChange","target","value","this","onSubmit","onChange","required","Component","FilterBox","div","FilterLabel","label","FilterInput","Filter","onChangeFilter","Section","section","Layout","children","Title","h2","App","filter","handleContactAdd","contact","some","item","alert","newContactData","uuid","prevState","handleChangeFilter","handleDeleteContact","contactId","filterContacts","toLowerCase","includes","console","log","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5d738d0.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst ContactItem = styled.li`\r\nmargin-bottom: 10px;\r\ndisplay: flex;\r\njustify-content: space-between;\r\n/* align-items: center; */\r\ntext-align: center;\r\nfont-size: 18px;\r\nfont-weight: 700;\r\n`;\r\n\r\nconst ContactButton = styled.button`\r\npadding: 5px 5px;\r\nbackground-color: #2E71BB;\r\nborder-radius: 3px;\r\nborder: none;\r\ncolor: #fff;\r\nfont-weight: 700;\r\ncursor: pointer;\r\noutline: none;\r\n`;\r\n\r\n\r\nconst ContactListItem =({name, number, onDelete}) =>(\r\n    \r\n        <ContactItem>\r\n            <span>{name}: {number}</span>\r\n            <ContactButton type=\"button\" onClick={onDelete}>\r\n                Delete\r\n            </ContactButton>\r\n        </ContactItem>\r\n    \r\n)\r\nContactListItem.propTypes={\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onDelete: PropTypes.func,\r\n}\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\nwidth: 350px;\r\npadding-left: 5px;\r\n`;\r\n\r\nconst ContactList = ({contacts, onDeleteContact}) =>(\r\n    <List>\r\n        {contacts.map(({id, name, number}) => (\r\n            <ContactListItem key={id} name={name} number={number} onDelete={()=>onDeleteContact(id)}/>\r\n        ))}        \r\n    </List>\r\n\r\n)\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object),\r\n    onDeleteContact: PropTypes.func,\r\n\r\n}\r\n\r\nexport default ContactList;","import React, {Component} from 'react';\r\nimport PropTypes from'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst PhonebookForm = styled.form`\r\nmargin-bottom: 20px\r\n`;\r\n\r\nconst PhoneInput = styled.input`\r\ndisplay: block;\r\n/* margin: 0 auto; */\r\n/* width: 95%; */\r\nheight: 20px;\r\n/* margin-bottom: 10px; */\r\nborder-radius: 3px;\r\nborder: 2px solid #797d7f;\r\n`;\r\n\r\nconst PhoneButton = styled.button`\r\npadding: 5px;\r\nbackground-color:#2E71BB;\r\nborder-radius: 3px;\r\nborder: none;\r\ncolor: #fff;\r\nfont-weight: 700;\r\nfont-size: 14px;\r\ncursor: pointer;\r\noutline: none;\r\n`;\r\n\r\n\r\nexport default class ContactForm extends Component{\r\n    static propTypes={\r\n        onAddContact: PropTypes.func,\r\n    }\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    handleSubmit = e =>{\r\n        e.preventDefault();\r\n        \r\n        this.props.onAddContact({\r\n            name: this.state.name,\r\n            number: this.state.number,\r\n        });\r\n        this.setState({\r\n            name:'',\r\n            number: '',\r\n        });\r\n    }\r\n\r\n    handleInputChange = e =>{\r\n        const {name, value} = e.target;\r\n        \r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n       \r\n    }\r\n\r\n    render(){\r\n        const {name, number} = this.state;\r\n        return(\r\n            <PhonebookForm onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    <h3>Name</h3>\r\n                        <PhoneInput type=\"text\" value={name} \r\n                        onChange={this.handleInputChange} name=\"name\" required/>\r\n                </label>\r\n                <label>\r\n                    <h3>Number</h3>\r\n                        <PhoneInput type=\"text\" value={number} \r\n                        onChange={this.handleInputChange} name=\"number\" required/>\r\n                </label>\r\n                    <br/>\r\n                    <PhoneButton type=\"submit\">Add contact</PhoneButton>\r\n                \r\n            </PhonebookForm>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst FilterBox= styled.div`\r\nmargin-bottom: 15px;\r\ntext-align: start;\r\n`;\r\n\r\nconst FilterLabel = styled.label`\r\n/* margin-right: 25px; */\r\nfont-size: 18px;\r\ntext-align: left;\r\n`;\r\n\r\nconst FilterInput = styled.input`\r\nmargin-left: 7px;\r\nborder: 2px solid #797d7f;\r\nborder-radius: 3px;\r\nheight: 20px;\r\n\r\n`;\r\n\r\n\r\nfunction Filter({value, onChangeFilter}){\r\n    return(\r\n        <FilterBox>\r\n            <FilterLabel>\r\n            Search contacts by name\r\n            <FilterInput type=\"text\" value={value}\r\n            onChange={e=>onChangeFilter(e.target.value)}/>\r\n            </FilterLabel>\r\n        </FilterBox>\r\n    );\r\n}\r\n\r\nFilter.propTypes={\r\n    value: PropTypes.string,\r\n    onChangeFilter: PropTypes.func,\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    width: 380px;\r\n    margin: 0 auto;\r\n    \r\n`;\r\n\r\nfunction Layout({children}){\r\n    return(\r\n        <Section>\r\n            {children}\r\n        </Section>\r\n    )\r\n}\r\n\r\nLayout.propTypes={\r\n    children: PropTypes.arrayOf(PropTypes.object),\r\n    // children: PropTypes.oneOfType([\r\n    //     PropTypes.bool,\r\n    //     PropTypes.object,\r\n    // ])\r\n\r\n}\r\nexport default Layout;","import React, {Component} from 'react';\nimport ContactList from './ContactList/ContactList';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport Layout from './Layout/Layout';\nimport {v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\n\n\nconst Title = styled.h2`\nmargin-bottom: 10px;\n`;\n\nexport default class App extends Component {\n    state = {\n        contacts: [],\n        filter: '',\n       \n    }\n\n    componentDidMount(){\n        console.log('Contacts componentDidMount');\n        const persistedContacts = localStorage.getItem('contacts');\n        if(persistedContacts !==null){\n            // console.log(persistedContacts);\n            // console.log(JSON.parse(persistedContacts));\n            this.setState({\n                contacts: JSON.parse(persistedContacts),\n            })\n        }\n    }\n    \n    componentDidUpdate(prevProps, prevState){\n        console.log('Contacts componentDidUpdate');\n        // console.log('prevState: ', prevState);\n        // console.log('thisState: ', this.state);\n        if(prevState.contacts !== this.state.contacts){\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n        }\n    }\n    handleContactAdd = contact =>{\n          const {contacts} = this.state;\n          const isIncludes = contacts.some(item =>item.name ===contact.name);\n          if(isIncludes){\n              alert (`${contact.name} is already in contacts`);\n              return;\n          }\n          const newContactData ={\n              id: uuid(),\n              name:contact.name,\n              number:contact.number,\n          }\n          this.setState(prevState =>({\n              contacts: [...prevState.contacts, newContactData],\n          }));\n        }  \n\n        handleInputChange = e =>{\n            const {name, value} = e.target;\n            this.setState({[name]: value,})\n        }\n        handleChangeFilter = filter =>{\n            this.setState({filter});\n        }\n        handleDeleteContact = contactId =>\n        this.setState(prevState=>({\n            contacts:prevState.contacts.filter(contact => contact.id !==contactId),\n        }));\n        \n        filterContacts=()=>{\n            const {contacts, filter} = this.state;\n            return contacts.filter(contact =>\n                contact.name.toLowerCase().includes(filter.toLowerCase()),\n                );\n        };\n\n\n    render(){\n        const {filter} = this.state;\n        const contacts = this.filterContacts();\n\n        return(\n            <Layout>\n                <Title>Phonebook</Title>\n                <ContactForm onAddContact={this.handleContactAdd}/>\n                <Title>Contacts</Title>\n                <Filter value={filter} onChangeFilter={this.handleChangeFilter}/>\n                {/* {contacts.length>0 &&  */}\n                <ContactList contacts={contacts} onDeleteContact={this.handleDeleteContact}/>\n            </Layout>\n        )\n    } \n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}